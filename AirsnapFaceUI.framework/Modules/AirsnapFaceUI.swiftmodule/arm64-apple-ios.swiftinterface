// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AirsnapFaceUI
import AVFoundation
import AirsnapFaceCore
import Foundation
import Swift
import UIKit
import _Concurrency
extension UIKit.UIImage {
  public func fixOrientation() -> UIKit.UIImage
}
@objc public enum ImageType : Swift.Int {
  case IMAGE_TYPE_JPEG, IMAGE_TYPE_PNG
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class AirsnapFaceThresholds : ObjectiveC.NSObject {
  @objc public func setPITCH_THRESHOLD(PITCH_THRESHOLD: Swift.Float)
  @objc public func setRollThreshold(threshold: Swift.Float)
  public func setYawThreshold(threshold: Swift.Float)
  public func setMASK_THRESHOLD(MASK_THRESHOLD: Swift.Float)
  public func setSUNGLASS_THRESHOLD(SUNGLASS_THRESHOLD: Swift.Float)
  public func setBRISQUE_THRESHOLD(BRISQUE_THRESHOLD: Swift.Float)
  public func setEYE_CLOSE_THRESHOLD(EYE_CLOSE_THRESHOLD: Swift.Float)
  @objc public func setFaceWidthToImageWidthRatioTolerance(tolerance: Swift.Float)
  @objc public func setFaceCentreToImageCentreTolerance(tolerance: Swift.Int)
  @objc override dynamic public init()
  @objc deinit
}
public enum Localization {
  public static let labelCameraClose: Swift.String
  public static let labelCameraFar: Swift.String
  public static let labelCameraUp: Swift.String
  public static let labelCameraDown: Swift.String
  public static let labelFaceCentre: Swift.String
  public static let labelCameraEyesClosed: Swift.String
  public static let labelMultipleFaces: Swift.String
  public static let labelFaceDetectionFailed: Swift.String
  public static let labelNoFacesDetected: Swift.String
  public static let labelLookStraight: Swift.String
  public static let labelMaskDetected: Swift.String
  public static let labelSunglassesDetected: Swift.String
  public static let labelEyesClosed: Swift.String
  public static let labelHoldStill: Swift.String
  public static let labelSpoofDEtected: Swift.String
  public static let labelOk: Swift.String
  public static let labelWait: Swift.String
}
@_inheritsConvenienceInitializers @objc public class FullFrontalCropConfig : ObjectiveC.NSObject {
  @objc public func setFullFrontalImageWidth(fullFrontalWidth: Swift.Float)
  @objc public func setFullFrontalImageType(imageType: AirsnapFaceUI.ImageType)
  @objc public func setCompression(compression: Swift.Float)
  @objc public func setEyeDistance(eyeDistance: Swift.Float)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol FaceCapturedProtocol {
  @objc func onFaceCaptured(data: Foundation.NSData?, facebox: AirsnapFaceCore.FaceBox)
  @objc func onFaceCaptureFailed(errorMsg: Swift.String)
  @objc func onTimedout(data: Foundation.NSData?)
  @objc func onCancelled()
}
@_inheritsConvenienceInitializers @objc public class PassiveLivenessResult : ObjectiveC.NSObject {
  @objc public func getProbability() -> Swift.Float
  @objc public func getScore() -> Swift.Float
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class FaceCaptureController : ObjectiveC.NSObject {
  @objc public func startFaceCapture(license: Swift.String, viewController: UIKit.UIViewController, delegate: AirsnapFaceUI.FaceCapturedProtocol)
  @objc public func setOcclusionEnabled(occlusionEnabled: Swift.Bool)
  @objc public func setIsISOEnabled(isoEnabled: Swift.Bool)
  @objc public func setISQualityCheckEnabled(qualityCheck: Swift.Bool)
  @objc public func setIsGetFullFrontalCrop(isGetFullFrontalCrop: Swift.Bool)
  @objc public func setEyeClosedEnabled(eyeClosedEnabled: Swift.Bool)
  @objc public func setUseBackCamera(useBackCamera: Swift.Bool)
  @objc public func setFrameCapture(frameCapture: Swift.Bool)
  @objc public func setAutoCapture(autoCapture: Swift.Bool)
  @objc public func setEnableCaptureAfter(enableCaptureAfter: Swift.Int)
  @objc public func setAirsnapFaceThresholds(thresholds: AirsnapFaceUI.AirsnapFaceThresholds)
  @objc public func setCompressionQuality(quality: Swift.Int)
  @objc public func setMessagesFrequency(frequency: Swift.Int)
  @objc public func setCaptureTimeoutInSecs(timeout: Swift.Int)
  @objc public func setFontSize(fontsize: Swift.Float)
  @objc public func setTitle(title: Swift.String)
  @objc public func setShowBackButton(show: Swift.Bool)
  public func initSDK(licenseString: Swift.String) -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
extension AirsnapFaceUI.ImageType : Swift.Equatable {}
extension AirsnapFaceUI.ImageType : Swift.Hashable {}
extension AirsnapFaceUI.ImageType : Swift.RawRepresentable {}
